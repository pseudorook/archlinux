#! /bin/bash
#set -eu

dir="$(dirname "$0")"

base="${dir}/packages/base.list"
toprc="${dir}/dotfiles/toprc"
pacmanconf="/etc/pacman.conf"
function install_base {
  show_header "Installing base packages and their config files."
  check_installed $(cat ${base})
  check_fail
  show_success "Base packages installed."

  show_info "Installing toprc."
  cp -f ${toprc} ${HOME}/.toprc
  show_success "Installed toprc."

  # Use reflector to sort among fastest mirrors
  show_info "Using reflector to have pacman use fastest https mirrors."
  sudo reflector --verbose -l 10 -p https --sort rate --save /etc/pacman.d/mirrorlist
}

function enable_multilib {
  if [[ $(uname -m) = "x86_64" ]]; then
    show_info "Enabling multilib pacman repository."
    sudo sed -i "s/#\[multilib\]/\[multilib\]/g" ${pacmanconf}
    sudo sed -i "/\[multilib\]/{n;s/#Include = /Include = /}" ${pacmanconf}
    check_fail
    sudo pacman -Sy --noconfirm
    show_success "Multilib enabled."
  else
    show_warning "Multilib not applicable for 32-bit installations. Skipping."
    show_warning "Arch discontinued 32-bit support in early 2017. Consider upgrading to a 64-bit."
  fi
}

function enable_sudo_insults {
  # Customize sudo to:
  #  - insult incorrect password attempts
  show_info "Enabling sudo insults."
  sudo sh -c 'cat /etc/sudoers | \
              sed -e "/^# Defaults!REBOOT !log_output$/a Defaults insults" | \
              (EDITOR="tee" visudo >/dev/null)'
}

function stylize_pacman {
  # Customize pacman to:
  #  - color pacman output
  #  - show pacman-game-style progress bare for pacman
  show_info "Enabling color and Pacman animation for pacman."
  sudo sed -i "s/^#Color$/Color/" ${pacmanconf}
  if ! test "$(grep ^ILoveCandy$ /etc/pacman.conf)"; then
    sudo sed -i "/^CheckSpace$/a ILoveCandy" ${pacmanconf}
  fi
}

function update_packages {
  show_header "Updating packages."
  sudo pacman -Syu --noconfirm
  check_fail
  show_success "Packages updated."
}

pcspkr_blacklist="/etc/modprobe.d/nobeep.conf"
function blacklist_pcspkr {
  show_header "Blacklisting pcspkr kernel module."
  if ! find /etc/modprobe.d/ -type f 
         -exec grep "blacklist pcspkr" {} + 2>&1 >/dev/null; then
    sudo echo "blacklist pcspkr" >> ${pcspkr_blacklist}
  fi
  show_success "Blacklisted in ${pcspkr_blacklist}."
}

function 01-base {
  show_question "Base: what do you want to install?"
  show_info "Main\n ${endbranch} Base (Hit ENTER to see options again.)"

  options=("Back" "Base packages" "Updates" "Enable multilib" "Sudo insults"
           "Pacman styling" "Blacklist pcspkr")
  select option in "${options[@]}"; do
    case $option in
      "Back")
        break
        ;;
      "Base packages")
        install_base
        show_info "Main\n ${endbranch} Base (Hit ENTER to see options again.)"
        ;;
      "Updates")
        update_packages
        show_info "Main\n ${endbranch} Base (Hit ENTER to see options again.)"
        ;;
      "Enable multilib")
        enable_multilib
        show_info "Main\n ${endbranch} Base (Hit ENTER to see options again.)"
        ;;
      "Sudo insults")
        enable_sudo_insults
        show_info "Main\n ${endbranch} Base (Hit ENTER to see options again.)"
        ;;
      "Pacman styling")
        stylize_pacman
        show_info "Main\n ${endbranch} Base (Hit ENTER to see options again.)"
        ;;
      "Blacklist pcspkr")
        blacklist_pcspkr
        show_info "Main\n ${endbranch} Base (Hit ENTER to see options again.)"
        ;;
      *)
        show_warning "Invalid option."
        show_info "Main\n ${endbranch} Base (Hit ENTER to see options again.)"
        ;;
    esac
  done
}
