#! /bin/bash
#set -eu

dir="$(dirname "$0")"

# Globals
gtktheme="Adapta-Nokto-Eta"
icontheme="Papirus-Dark"

function set_noto_fonts {
  show_header "Configuring system fonts."
  if pacman -Qi noto-fonts > /dev/null 2>&1; then
    if pacman -Qi cinnamon >/dev/null 2>&1; then
      show_info "Setting fonts for cinnamon environment."

      # screensaver fonts
      gsettings set org.cinnamon.desktop.screensaver font-message "'Noto Sans 14'"
      gsettings set org.cinnamon.desktop.screensaver font-date "'Noto Sans 24'"
      gsettings set org.cinnamon.desktop.screensaver font-time "'Noto Sans 64'"

      # desktop environment fonts
      gsettings set org.cinnamon.desktop.interface font-name "'Noto Sans 9'"
      # gsettings set org.nemo.desktop font "'Noto Sans 10'"
      gsettings set org.gnome.desktop.interface document-font-name "'Noto Sans 10'"
      gsettings set org.gnome.desktop.interface monospace-font-name "'Monospace 11'"
      gsettings set org.cinnamon.desktop.wm.preferences titlebar-font "'Noto Sans Bold 10'"
    fi

    if pacman -Qi gnome-shell >/dev/null 2>&1; then
      show_info "Setting fonts for GNOME environment."

      # desktop environment fonts
      gsettings set org.gnome.desktop.wm.preferences titlebar-font "'Cantarell Bold 11'"
      gsettings set org.gnome.desktop.interface document-font-name "'Cantarell 11'"
      gsettings set org.gnome.desktop.interface font-name "'Sans 11'"
      # gsettings set org.gnome.desktop.interface monospace-font-name "'Noto Mono 11'"
      gsettings set org.gnome.desktop.interface monospace-font-name "'Monospace 11'"
    fi
  else
    show_warning "Noto fonts are not installed. Skipping."
  fi
}

xdgdefaultconf="/etc/xdg/user-dirs.defaults"
function set_icon_theme {
  show_header "Setting desktop icon theme to ${icontheme}."

  if pacman -Qi cinnamon >/dev/null 2>&1; then
    show_info "Setting cinnamon icon theme to ${icontheme}."
    gsettings set org.cinnamon.desktop.interface icon-theme "'${icontheme}'"
  fi
  if pacman -Qi gnome-shell >/dev/null 2>&1; then
    show_info "Setting GNOME icon theme to ${icontheme}."
    gsettings set org.gnome.desktop.interface icon-theme "'${icontheme}'"
  fi

  # Only run this part if Papirus icons are installed.
  papiruspath=/usr/share/icons/Papirus
  if [ -d ${papiruspath} ]; then
    # Change the blue folder color in Papirus to match the Adapta highlight
    # color when using it as the GTK theme.
    if [[ "${gtktheme}" =~ "Adapta" ]]; then
      sudo find ${papiruspath} -type f -exec sed -i "s/#5294e2/#00acc1/g" {} +
      sudo find ${papiruspath} -type f -exec sed -i "s/#4877b1/#0097a7/g" {} +
    # Change the folder color back to the original blue in case this function
    # is used to set Adapta and then later change to Arc.
    elif [[ "${gtktheme}" =~ "Arc" ]]; then
      sudo find ${papiruspath} -type f -exec sed -i "s/#00acc1/#5294e2/g" {} +
      sudo find ${papiruspath} -type f -exec sed -i "s/#0097a7/#4877b1/g" {} +
    fi
  fi

  if [[ "${icontheme}" =~ "Papirus" ]]; then
    show_info "Creating Projects/ and Sync/ and setting gvfs metadata."
    mkdir -p ${HOME}/Projects
    gio set ${HOME}/Projects/ -t string \
      metadata::custom-icon-name folder-development
    mkdir -p ${HOME}/Sync
    gio set ${HOME}/Sync/ -t string \
      metadata::custom-icon-name folder-cloud
  fi

  show_info "Disabling Templates/ and Public/ folders."
  sudo sed -i "s/^TEMPLATES/#TEMPLATES/g" ${xdgdefaultconf}
  sudo sed -i "s/^PUBLICSHARE/#PUBLICSHARE/g" ${xdgdefaultconf}
  rm -rf ${HOME}/Templates
  rm -rf ${HOME}/Public
}

function set_gtk_theme {
  show_header "Setting desktop GTK theme to ${gtktheme}."
  if pacman -Qi cinnamon >/dev/null 2>&1; then
    show_info "Setting cinnamon GTK theme to ${gtktheme}."
    gsettings set org.cinnamon.desktop.interface gtk-theme "'${gtktheme}'"
    gsettings set org.cinnamon.desktop.wm.preferences theme "'${gtktheme}'"
    if [[ "$gtktheme" =~ "-Eta" ]]; then
      gsettings set org.cinnamon.theme name "'${gtktheme%-*}'"
    else
      gsettings set org.cinnamon.theme name "'${gtktheme}'"
    fi
  fi
  if pacman -Qi gnome-shell >/dev/null 2>&1; then
    show_info "Setting GNOME GTK theme to ${gtktheme}."
    gsettings set org.gnome.desktop.wm.preferences theme "'${gtktheme}'"
    gsettings set org.gnome.desktop.interface gtk-theme "'${gtktheme}'"
    gnome-shell-extension-tool -e "user-theme@gnome-shell-extensions.gcampax.github.com" || true
    gsettings set org.gnome.shell.extensions.user-theme name "'${gtktheme}'"
  fi
}

lightdmconf="/etc/lightdm/lightdm-gtk-greeter.conf"
function set_lightdm_theme {
  if pacman -Qi lightdm-gtk-greeter > /dev/null 2>&1; then
    show_header "Setting LightDM login GTK theme to ${gtktheme}."
    sudo sed -i "s/^#theme-name=$/theme-name=${gtktheme}/g" ${lightdmconf}
    sudo sed -i "s/^#icon-theme-name=$/icon-theme-name=${icontheme}/g" ${lightdmconf}
    if pacman -Qi noto-fonts > /dev/null; then
      sudo sed -i "s/^#font-name=$/font-name=Noto Sans/g" ${lightdmconf}
    fi
    sudo sed -i "s/^#xft-hintstyle=$/xft-hintstyle=slight/g" ${lightdmconf}
  else
    show_warning "LightDM GTK greeter not installed. Skipping."
  fi
}

function set_gdm_theme {
  if pacman -Qi gdm > /dev/null 2>&1; then
    show_header "Setting GDM login theme to ${gtktheme}."
    sudo cp -r /usr/share/gnome-shell /usr/share/gnome-shell-$(date +%Y%m%d)
    sudo cp -rf /usr/share/themes/${gtktheme}/gnome-shell/* /usr/share/gnome-shell/
    if [[ "${gtktheme}" =~ "Adapta" ]]; then
      sudo cp -f /usr/share/themes/Adapta/gnome-shell/extensions/window-list/classic.css \
        /usr/share/gnome-shell/extensions/window-list@gnome-shell-extensions.gcampax.github.com/
      sudo cp -f /usr/share/themes/Adapta/gnome-shell/extensions/window-list/stylesheet.css \
        /usr/share/gnome-shell/extensions/window-list@gnome-shell-extensions.gcampax.github.com/
    fi
  else
    show_warning "GDM is not installed. Skipping."
  fi
}

gtksettings="${HOME}/.config/gtk-3.0/settings.ini"
function set_dark_gtk {
  show_header "Setting global dark theme for gtk applications."
  if grep ^gtk-application-prefer-dark-theme= ${gtksettings} >/dev/null 2>&1; then
    isgtkdark=$(grep ^gtk-application-prefer-dark-theme= ${gtksettings} | cut -d"=" -f2)
    if test ${isgtkdark}; then
      show_info "Desktop is already set to use dark GTK variants."
    else
      sed -i "s/^gtk-application-prefer-dark-theme=${isgtkdark}$/gtk-application-prefer-dark-theme=1/g" ${gtksettings}
    fi
  else
    if [ -f ${gtksettings} ]; then
      echo "" >> ${gtksettings}
    else
      mkdir -p $(dirname ${gtksettings}) && touch ${gtksettings}
    fi
    echo "[Settings]" >> ${gtksettings}
    echo "gtk-application-prefer-dark-theme=1" >> ${gtksettings}
  fi
}

cinnamondconf="${dir}/dconf/cinnamon.dconf"
function import_cinnamon_dconf {
  show_header "Importing cinnamon dconf settings."
  dconf load / < ${cinnamondconf}
  check_fail
  show_success "Cinnamon dconf settings imported."
}

gnomedconf="${dir}/dconf/gnome.dconf"
function import_gnome_dconf {
  show_header "Importing GNOME dconf settings."
  dconf load / < ${gnomedconf}
  check_fail
  show_success "GNOME dconf settings imported."
}

appsdconf="${dir}/dconf/apps.dconf"
function import_apps_dconf {
  show_header "Importing application dconf settings."
  dconf load / < ${appsdconf}
  check_fail
  show_success "Application dconf settings imported."
}

function enable_autologin {
  show_header "Enabling automatic login for ${USER}."
  if pacman -Qi gdm > /dev/null 2>&1; then
    show_info "Log in as ${USER} via GDM."
    if [ -f "/etc/gdm/custom.conf" ]; then
      sudo sh -c 'echo "# Enable automatic login" > /etc/gdm/custom.conf'
      sudo sh -c 'echo "[daemon]" >> /etc/gdm/custom.conf'
      sudo sh -c 'echo "AutomaticLogin=" >> /etc/gdm/custom.conf'
      sudo sh -c 'echo "AutomaticLoginEnable=True" >> /etc/gdm/custom.conf'
    fi
    sudo sed -i "s/^AutomaticLogin=\(.*\)$/AutomaticLogin=${USER}/g" /etc/gdm/custom.conf
  fi
  if pacman -Qi lightdm > /dev/null 2>&1; then
    show_info "Log in as ${USER} via LightDM."
    if `test getent group | grep autologin`; then
      sudo groupadd -r autologin
    fi
    ! [[ $(getent group) =~ "autologin" ]] && sudo groupadd -a ${USER} autologin
    sudo sed -i "s/^#autologin-user=/autologin-user=/g" /etc/lightdm/lightdm.conf
    sudo sed -i "s/^#autologin-user-timeout=/autologin-user-timeout=/g" /etc/lightdm/lightdm.conf
    sudo sed -i "s/^autologin-user=\(.*\)$/autologin-user=${USER}/g" /etc/lightdm/lightdm.conf
  fi
  show_success "Autologin enabled."
}

grubconfig="/etc/default/grub"
function invert_brightness {
  oldline=$(cat ${grubconfig} | grep ^GRUB_CMDLINE_LINUX=)
  bootparams=$(echo ${oldline} | sed -n "s/^GRUB_CMDLINE_LINUX=\"\(.*\)\"/\1/p")
  if [[ ${bootparams} =~ "i915.invert_brightness=1" ]]; then
    show_header "Brightness already inverted. Skipping."
  else
    if test "${bootparams}"; then
      sudo sed -i "s|${bootparams}|${bootparams} i915.invert_brightness=1|g" ${grubconfig}
    else
      sudo sed -i "s|${oldline}|GRUB_CMDLINE_LINUX=\"i915.invert_brightness=1\"|g" ${grubconfig}
    fi
    sudo sed -i "\|^GRUB_CMDLINE_LINUX=| a\#${oldline}" ${grubconfig} # backup
    show_success "Brightness inverted."
    sudo grub-mkconfig -o /boot/grub/grub.cfg
  fi
}

pulseconfig="/etc/pulse/default.pa"
function disable_pulseaudio_suspend {
  show_header "Disabling suspend on PulseAudio when sinks/sources idle."
  if [ -f ${pulseconfig} ]; then
    sudo sed -i "s/^load-module module-suspend-on-idle$/#load-module module-suspend-on-idle/g" ${pulseconfig}
  else
    show_warning "PuleAudio config file missing. Exiting."
  fi
}

function install_scripts {
  show_header "Installing miscellaneous scripts to the ~/.scripts folder."
  git clone https://github.com/pseudorook/misc-scripts ${HOME}/.scripts
  show_success "Installed."
}

function select_desktop_theme {
  show_question "Select a GTK theme:"

  options=("Back" "Adwaita" "Arc" "Arc-Darker" "Arc-Dark" "Adapta" \
           "Adapta-Eta" "Adapta-Nokto" "Adapta-Nokto-Eta")
  select option in "${options[@]}"; do
    case $option in
      "Back")
        break
        ;;
      "Adwaita")
        if [ -d /usr/share/themes/Adwaita ] || \
           [ -d ${HOME}/.themes/Adwaita ]; then
          gtktheme="Adwaita"
          set_gtk_theme
          set_lightdm_theme
          set_gdm_theme
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Arc")
        if [ -d /usr/share/themes/Arc ] || \
           [ -d ${HOME}/.themes/Arc ]; then
          gtktheme="Arc"
          set_gtk_theme
          set_lightdm_theme
          set_gdm_theme
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Arc-Darker")
        if [ -d /usr/share/themes/Arc-Darker ] || \
           [ -d ${HOME}/.themes/Arc-Darker ]; then
          gtktheme="Arc-Darker"
          set_gtk_theme
          set_lightdm_theme
          set_gdm_theme
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Arc-Dark")
        if [ -d /usr/share/themes/Arc-Dark ] || \
           [ -d ${HOME}/.themes/Arc-Dark ]; then
          gtktheme="Arc-Dark"
          set_gtk_theme
          set_lightdm_theme
          set_gdm_theme
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Adapta")
        if [ -d /usr/share/themes/Adapta ] || \
           [ -d ${HOME}/.themes/Adapta ]; then
          gtktheme="Adapta"
          set_gtk_theme
          set_lightdm_theme
          set_gdm_theme
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Adapta-Eta")
        if [ -d /usr/share/themes/Adapta-Eta ] || \
           [ -d ${HOME}/.themes/Adapta-Eta ]; then
          gtktheme="Adapta-Eta"
          set_gtk_theme
          set_lightdm_theme
          set_gdm_theme
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Adapta-Nokto")
        if [ -d /usr/share/themes/Adapta-Nokto ] || \
           [ -d ${HOME}/.themes/Adapta-Nokto ]; then
          gtktheme="Adapta-Nokto"
          set_gtk_theme
          set_lightdm_theme
          set_gdm_theme
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Adapta-Nokto-Eta")
        if [ -d /usr/share/themes/Adapta-Nokto-Eta ] || \
           [ -d ${HOME}/.themes/Adapta-Nokto-Eta ]; then
          gtktheme="Adapta-Nokto-Eta"
          set_gtk_theme
          set_lightdm_theme
          set_gdm_theme
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      *)
        show_warning "Invalid option."
        ;;
    esac
  done
}

function select_icon_theme {
  show_question "Select an icon theme:"

  options=("Back" "Papirus" "ePapirus" "Papirus-Light" "Papirus-Dark")
  select option in "${options[@]}"; do
    case $option in
      "Back")
        break
        ;;
      "Papirus")
        if [ -d /usr/share/icons/Papirus ] || \
           [ -d ${HOME}/.icons/Papirus ]; then
          icontheme="Papirus"
          set_icon_theme
          set_lightdm_theme
        else
          show_warning "${option} icons are not installed."
          select_icon_theme
        fi
        break
        ;;
      "ePapirus")
        if [ -d /usr/share/icons/ePapirus ] || \
           [ -d ${HOME}/.icons/ePapirus ]; then
          icontheme="ePapirus"
          set_icon_theme
          set_lightdm_theme
        else
          show_warning "${option} icons are not installed."
          select_icon_theme
        fi
        break
        ;;
      "Papirus-Light")
        if [ -d /usr/share/icons/Papirus-Light ] || \
           [ -d ${HOME}/.icons/Papirus-Light ]; then
          icontheme="Papirus-Light"
          set_icon_theme
          set_lightdm_theme
        else
          show_warning "${option} icons are not installed."
          select_icon_theme
        fi
        break
        ;;
      "Papirus-Dark")
        if [ -d /usr/share/icons/Papirus-Dark ] || \
           [ -d ${HOME}/.icons/Papirus-Dark ]; then
          icontheme="Papirus-Dark"
          set_icon_theme
          set_lightdm_theme
        else
          show_warning "${option} icons are not installed."
          select_icon_theme
        fi
        break
        ;;
      *)
        show_warning "Invalid option."
        ;;
    esac
  done
}

function 05-personal {
  show_question "Personal: what do you want to set?"
  show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"

  options=("Back" "All" "Set Noto fonts" "Select icon theme" \
           "Select desktop theme" "Set dark GTK" "Import Cinnamon dconf" \
           "Import GNOME dconf" "Import application dconf" "Enable autologin" \
           "Invert brightness" "Disable PulseAudio suspend" "Add scripts")
  select option in "${options[@]}"; do
    case $option in
      "Back")
        break
        ;;
      "All")
        set_noto_fonts
        set_icon_theme
        set_gtk_theme
        set_lightdm_theme
        set_gdm_theme
        set_dark_gtk
        import_cinnamon_dconf
        import_gnome_dconf
        import_apps_dconf
        enable_autologin
        invert_brightness
        disable_pulseaudio_suspend
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Set Noto fonts")
        set_noto_fonts
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Select icon theme")
        select_icon_theme
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Select desktop theme")
        select_desktop_theme
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Set dark GTK")
        set_dark_gtk
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Import Cinnamon dconf")
        import_cinnamon_dconf
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Import GNOME dconf")
        import_gnome_dconf
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Import application dconf")
        import_apps_dconf
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Enable autologin")
        enable_autologin
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Invert brightness")
        invert_brightness
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Disable PulseAudio suspend")
        disable_pulseaudio_suspend
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Add scripts")
        install_scripts
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      *)
        show_warning "Invalid option."
        ;;
    esac
  done
}
