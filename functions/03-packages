#! /bin/bash
#set -eu

dir="$(dirname "$0")"

apps="${dir}/packages/apps.list"
function install_apps {
  show_header "Installing desktop applications."
  check_installed $(cat ${apps})
  check_fail
  show_success "Applications installed."
}

codecs="${dir}/packages/codecs.list"
function install_codecs {
  show_header "Installing codecs."
  check_installed $(cat ${codecs})
  check_fail
  show_success "Codecs installed."
}

dev="${dir}/packages/dev.list"
vimrc="${dir}/dotfiles/vimrc"
npmrc="${dir}/dotfiles/npmrc"
gitignore="${dir}/dotfiles/gitignore"
function install_dev {
  show_header "Installing languages and editors for development."
  check_installed $(cat ${dev})
  check_fail
  show_success "Languages and editors installed."

  show_info "Installing dotfiles."
  cp -f ${vimrc} ${HOME}/.vimrc
  cp -f ${npmrc} ${HOME}/.npmrc
  cp -f ${gitignore} ${HOME}/.gitignore
  show_success "Dotfiles installed."
}

games="${dir}/packages/games.list"
function install_games {
  show_header "Installing game emulators."
  check_installed $(cat ${games})
  check_fail
  show_success "Emulators installed."
}

kvm="${dir}/packages/kvm.list"
function install_kvm {
  show_header "Installing KVM."
  check_installed $(cat ${kvm})
  check_fail
  show_success "KVM installed."
  sudo usermod -aG kvm,libvirt $(whoami)

  sudo systemctl enable libvirtd
  sudo systemctl start libvirtd
}

kvmguest="${dir}/packages/kvm-guest.list"
mkinitcpioconf="/etc/mkinitcpio.conf"
function install_kvm_guest {
  show_header "Installing tools for KVM guests."
  check_installed $(cat ${kvmguest})
  check_fail
  show_success "KVM installed."

  show_info "Adding virtio modules to initramfs."
  virtiomodules="virtio virtio_pci virtio_blk virtio_net virtio_ring"
  if test "$(grep "^MODULES=.*${virtiomodules}.*" ${mkinitcpioconf})"; then
    show_info "Virtio modules already specified in ${mkinitcpioconf}."
  else
    mkinitcpiomodules=$(sed -n "s/^MODULES=\"\(.*\)\"/\1 ${virtiomodules}/p" ${mkinitcpioconf} | sed -e "s/^[[:space:]]//g")
    sed -i "s/^MODULES=\".*\"/MODULES=\"${mkinitcpiomodules}\"/" ${mkinitcpioconf}
    show_info "Rebuilding kernel(s)"
    sudo mkinitcpio -p linux
  fi

  sudo systemctl enable qemu-ga.service
  sudo systemctl enable spice-vdagentd.service

  # show_info "Manually installing xf86-video-qxl."
  # mkdir -p ${pkgbuilddir}
  # cd ${pkgbuilddir}
  # wget https://aur.archlinux.org/cgit/aur.git/snapshot/xf86-video-qxl.tar.gz
  # tar xf ${pkgbuilddir}/xf86-video-qxl.tar.gz
  # cd xf86-video-qxl
  # makepkg -si
  # show_success "xf86-video-qxl installed."
  # cd ${dir}
}

virtualbox="${dir}/packages/virtualbox.list"
vboxservice="${dir}/services/virtualbox-modprobe.service"
function install_virtualbox {
  show_header "Installing VirtualBox."
  check_installed $(cat ${virtualbox})
  check_fail
  show_success "VirtualBox installed."

  show_info "Adding $(whoami) to vboxusers group."
  sudo usermod -aG vboxusers $(whoami)
  show_success "Done."

  show_info "Setting up custom services."
  sudo ln -s /dev/null /etc/modules-load.d/virtualbox-host-modules-arch.conf
  sudo cp -f ${vboxservice} /etc/systemd/system
  sudo systemctl enable virtualbox-modprobe.service
  show_success "Done."
}

virtualboxguest="${dir}/packages/virtualbox-guest.list"
function install_virtualbox_guest {
  show_header "Installing packages for VirtualBox guests."
  check_installed $(cat ${virtualboxguest})
  check_fail
  show_success "VirtualBox guest packages installed."
}
