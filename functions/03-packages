#! /bin/bash
set -eu

dir="$(dirname "$0")"

apps="${dir}/data/apps.list"
function install_apps {
  show_info "Installing desktop applications."
  sudo pacman -S $(cat ${apps})
  check_fail
  show_success "Applications installed."
}

codecs="${dir}/data/codecs.list"
function install_codecs {
  show_info "Installing codecs."
  sudo pacman -S $(cat ${codecs})
  check_fail
  show_success "Codecs installed."
}

dev="${dir}/data/dev.list"
vimrc="${dir}/dotfiles/vimrc"
npmrc="${dir}/dotfiles/npmrc"
gitignore="${dir}/dotfiles/gitignore"
function install_dev {
  show_info "Installing languages and editors for development."
  sudo pacman -S $(cat ${dev})
  check_fail
  show_success "Languages and editors installed."

  show_info "Installing dotfiles."
  cp -f ${vimrc} ${HOME}/.vimrc
  cp -f ${npmrc} ${HOME}/.npmrc
  cp -f ${gitignore} ${HOME}/.gitignore
  show_success "Dotfiles installed."
}

games="${dir}/data/games.list"
function install_games {
  show_info "Installing game emulators."
  sudo pacman -S $(cat ${games})
  check_fail
  show_success "Emulators installed."
}

kvm="${dir}/data/kvm.list"
function install_kvm {
  show_info "Installing KVM."
  sudo pacman -S $(cat ${kvm})
  check_fail
  show_success "KVM installed."
  sudo usermod -aG kvm,libvirt $(whoami)

  sudo systemctl enable libvirtd
  sudo systemctl start libvirtd
}

kvmguest="${dir}/data/kvm-guest.list"
function install_kvm_guest {
  show_info "Installing tools for KVM guests."
  sudo pacman -S $(cat ${kvm})
  check_fail
  show_success "KVM installed."

  show_info "Adding virtio modules to initramfs."
  virtiomodules="virtio virtio_pci virtio_blk virtio_net virtio_ring"
  mkinitcpiomodules=$(sed -n "s/^MODULES=\"\(.*\)\"/\1 ${virtiomodules}/p" /etc/mkinitcpio.conf | sed -e "s/^[[:space:]]//g")
  sed -i "s/^MODULES=\".*\"/MODULES=\"${mkinitcpiomodules}\"/" /etc/mkinitcpio.conf
  show_info "Rebuilding kernel(s)"
  sudo mkinitcpio -p linux

  sudo systemctl enable qemu-ga.service
  sudo systemctl enable spice-vdagentd.service

  # show_info "Manually installing xf86-video-qxl."
  # mkdir -p ${pkgbuilddir}
  # cd ${pkgbuilddir}
  # wget https://aur.archlinux.org/cgit/aur.git/snapshot/xf86-video-qxl.tar.gz
  # tar xf ${pkgbuilddir}/xf86-video-qxl.tar.gz
  # cd xf86-video-qxl
  # makepkg -si
  # show_success "xf86-video-qxl installed."
  # cd ${dir}
}

virtualbox="${dir}/data/virtualbox.list"
vboxservice="${dir}/services/virtualbox-modprobe.service"
function install_virtualbox {
  show_info "Install VirtualBox."
  sudo pacman -S $(cat ${virtualbox})
  check_fail
  show_success "VirtualBox installed."
  
  show_info "Adding $(whoami) to vboxusers group."
  sudo usermod -aG vboxusers $(whoami)
  show_success "Done."

  show_info "Setting up custom services."
  sudo ln -s /etc/modules-load.d/virtualbox-host-modules-arch.conf /dev/null
  sudo cp -f ${vboxservice} /etc/systemd/system
  sudo systemctl enable virtualbox-modprobe.service
  show_success "Done."
}
